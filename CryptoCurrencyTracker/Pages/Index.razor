@page "/"
@inject IApiService _apiService

@*<P_SlideCoins />*@
<MudContainer MaxWidth="MaxWidth.ExtraLarge">
    <MudTabs Elevation="2" Rounded="true" ApplyEffectsToContainer="true" Centered="false" Class="my-6" Color="Color.Dark">
        <MudTabPanel Icon="@Icons.Material.Filled.TableRows" Text="Table" BadgeDot="true" BadgeColor="Color.Success">
            @if (CoinList != null && CoinList.Count() > 0)
            {
                <P_CoinList Data="CoinList" />
            }
        </MudTabPanel>
        <MudTabPanel Icon="@Icons.Material.Filled.Api" Text="List" BadgeDot="true" BadgeColor="Color.Error">
            @if (TrendingCoins != null && TrendingCoins.Count() > 0)
            {
                <P_TrendingCoins Data="TrendingCoins" />
            }
        </MudTabPanel>
    </MudTabs>
</MudContainer>

@code {
    IEnumerable<TrendingCoinsModel> TrendingCoins = new List<TrendingCoinsModel>();
    IEnumerable<CoinListModel> CoinList = new List<CoinListModel>();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var data1 = await _apiService.GetTrendingCoinsV2Async("USD");
            if (data1 != null)
            {
                Console.WriteLine(data1.ToJson());
                TrendingCoins = data1;
            }
            var data2 = await _apiService.GetCoinListAsync("USD");
            if (data2 != null)
            {
                Console.WriteLine(data2.ToJson());
                CoinList = data2;
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message + ex.StackTrace);
        }
    }
}