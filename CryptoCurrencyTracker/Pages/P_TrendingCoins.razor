@if (data != null && data.Count() > 0)
{
    <RadzenDataList WrapItems="true" 
        AllowPaging="false" 
        Data="@data" 
        TItem="TrendingCoinsModel">
        <Template Context="item">
            <RadzenCard Style="width:200px;">
                <div class="d-flex flex-row align-items-center">
                    <RadzenImage Path="@item.image" Class="rounded-circle float-left mr-3" Style="width: 80px; height: 80px;" />
                    <div>
                        <h4 class="mb-0">@item.name</h4>
                        <div>Rank : @item.market_cap_rank</div>
                        <div style="font-size: .8em">@(Convert.ToDecimal(item.current_price).ToString("n2"))</div>
                    </div>
                </div>
                <hr style="border: none; background-color: rgba(0,0,0,.08); height: 1px; margin: 1rem 0;" />
                <div class="row">
                    <div class="col-md-6 text-truncate">
                        <b></b>
                    </div>
                    <div class="col-md-6 text-right">
                        <RadzenButton ButtonStyle="ButtonStyle.Light" Class="mr-1">
                            @item.symbol
                            <RadzenBadge Class="ml-3" BadgeStyle="@(item.market_cap_change_percentage_24h > 0 ? BadgeStyle.Success : BadgeStyle.Danger)"
                                     Text="@(item.market_cap_change_percentage_24h.ToString("f2") + "%")" />
                        </RadzenButton>
                    </div>
                </div>
            </RadzenCard>
        </Template>
    </RadzenDataList>
    <RadzenPager ShowPagingSummary="true" PagingSummaryFormat="@pagingSummaryFormat" HorizontalAlign="HorizontalAlign.Right" Count="count" PageSize="@pageSize" PageNumbersCount="5" PageChanged="@PageChanged" />
}

@code {
    string pagingSummaryFormat = "Displaying page {0} of {1} (total {2} records)";
    int pageSize = 18;
    int count;
    [Parameter]
    public IEnumerable<TrendingCoinsModel> Data { get; set; } = new List<TrendingCoinsModel>().ToArray();
    IEnumerable<TrendingCoinsModel> data = new List<TrendingCoinsModel>().ToArray();

    protected override void OnParametersSet()
    {
        count = Data.Count();
        GetData(0, pageSize);
    }

    void PageChanged(PagerEventArgs args)
    {
        GetData(args.Skip, args.Top);
    }

    void GetData(int skip, int take)
    {
        data = Data.Skip(skip).Take(take);
    }
}
